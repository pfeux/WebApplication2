name: learn-github-actions
run-name: ${{ github.actor }} is learning Github Actions
on: [push]
jobs:
    setup-job:
        name: Checkout repo
        runs-on: ubuntu-latest
        outputs:
            application_name: ${{ steps.set-env.outputs.appname }}
        steps:
        - name: Code checkout
          uses: actions/checkout@v2

        - name: Set env
          id: set-env
          run: |
            echo "appname=$APP_NAME" >> $GITHUB_OUTPUT

    build-docker-image:
        name: Build and push docker image
        needs: [setup-job]
        runs-on: ubuntu-latest
        steps:
        - name: Build image
          run: |
            docker build --tag webapplication2 .

    pacttest-uploader:
        runs-on: ubuntu-latest
        needs: [setup-job, build-docker-image]
        steps:
        - name: Prepare python
          uses: actions/setup-python@v4.5.0
          with:
            python-version: 3.11.0
          
        - name: Setup docker container
          id: setup-container
          run: |
              container_id=`docker create `${{ needs.build-docker-image.outputs.published_image_path }}`
              if [$?=0]; then
                mkdir -p files
                docker cp $container_id:/app/pacts files
                docker rm $container_id
                ls -alhR files
              else
                echo "Unable to run the image: ${{ needs.build-docker-image.outputs.published_image_path }}"
                exit 1
              fi
              echo "containerId=$container_id" >> $GITHUB_OUTPUT
      
        - name: Prepare python script
          id: python-script
          run: |
              PYTHON_SCRIPT=$(cat <<EOF
              import glob, os json, urllib.request
              version = ${{ github.run_id }}
              os.chdir('files')
              for f in glob.glob('*.json'):
                  with open(f) as json_data:
                      pact = json.load(json_data)
                      pact_url = 'http://pact-broker.stg.commercial.csnglobal.net/pacts/provider/{}/consumer/{}/version/{}'.format(pact['provider']['name'],pact['consumer']['name'], 1)
                      print(response)
              EOF
              )
              python -c "$PYTHON_SCRIPT"